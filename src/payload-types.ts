/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    products: Product;
    reviews: Review;
    carts: Cart;
    orders: Order;
    discountcodes: Discountcode;
    pages: Page;
    reusable: Reusable;
    users: User;
    sessions: Session;
    media: Media;
    categories: Category;
    tags: Tag;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    settings: Setting;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
  };
  login: {
    password: string;
    email: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  title: string;
  productType?: ('card' | 'gift' | 'addOn') | null;
  categories?: (number | Category)[] | null;
  tags?: (number | Tag)[] | null;
  shippingSize?: ('mini' | 'small' | 'medium' | 'large') | null;
  promoted: number;
  prices: {
    basePrice: number;
    salePrice?: number | null;
  };
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  extraDetails?:
    | {
        title: string;
        details: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
      }[]
    | null;
  displayTags?: (number | Tag)[] | null;
  addOns?: (number | Product)[] | null;
  media?:
    | {
        mediaItem?: number | Media | null;
        id?: string | null;
      }[]
    | null;
  reviews?: (number | Review)[] | null;
  starRating?: number | null;
  stock?: {
    availability?: ('available' | 'unavailable') | null;
    stockOnHand?: number | null;
    lowStockThreshold?: number | null;
  };
  layout?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  slug?: string | null;
  stripe?: {
    productId?: string | null;
    basePriceId?: string | null;
    salePriceId?: string | null;
  };
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: number | Media | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  productType?: ('card' | 'gift') | null;
  shopConfig?: {
    visible?: boolean | null;
    shopFilterTitle?: string | null;
    sortOrder?: number | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: number;
  title?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: number;
  title?: string | null;
  starRating?: ('1' | '2' | '3' | '4' | '5') | null;
  reviewDate?: string | null;
  body?: string | null;
  reviewer?: {
    name?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "carts".
 */
export interface Cart {
  id: number;
  cartNumber?: string | null;
  status: 'pending' | 'completed' | 'cancelled';
  discountCodeApplied?: string | null;
  totals: {
    cost: number;
    shipping: number;
    discount?: number | null;
    total: number;
  };
  billing?: {
    orderedBy?: (number | null) | User;
    subscribeToNewsletter?: boolean | null;
    firstName?: string | null;
    lastName?: string | null;
    email?: string | null;
    orgName?: string | null;
    orgId?: string | null;
    contactNumber?: number | null;
    address?: {
      addressLine1?: string | null;
      addressLine2?: string | null;
      city?: string | null;
      state?: string | null;
      postcode?: string | null;
    };
  };
  items?:
    | {
        itemId: string;
        quantity: number;
        price: number;
        product: number | Product;
        addOns?: (number | Product)[] | null;
        receiverId?: string | null;
        giftCard: {
          message: string;
          writingStyle: string;
        };
        id?: string | null;
      }[]
    | null;
  receivers?:
    | {
        receiverId: string;
        firstName: string;
        lastName: string;
        address: {
          addressLine1: string;
          addressLine2?: string | null;
          city: string;
          state: string;
          postcode: string;
        };
        delivery?: {
          tracking?: {
            id?: string | null;
            link?: string | null;
          };
          shippingMethod?: ('standardMail' | 'expressMail' | 'standardParcel' | 'expressParcel') | null;
          shippingPrice?: number | null;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName?: string | null;
  lastName?: string | null;
  orgName?: string | null;
  orgId?: string | null;
  website?: string | null;
  imageUrl?: string | null;
  status?: ('active' | 'inactive') | null;
  type?: ('staff' | 'guest' | 'retail' | 'business' | 'partner')[] | null;
  roles: ('admin' | 'public' | 'customer')[];
  stripeId?: string | null;
  billingAddress?: {
    addressLine1?: string | null;
    addressLine2?: string | null;
    city?: string | null;
    state?: string | null;
    postcode?: string | null;
  };
  contactNumber?: string | null;
  orders?: (number | Order)[] | null;
  accounts?:
    | {
        provider?: string | null;
        providerAccountId?: string | null;
        providerSearchString?: string | null;
        id?: string | null;
      }[]
    | null;
  verificationTokens?:
    | {
        identifier?: string | null;
        token?: string | null;
        expires?: string | null;
        id?: string | null;
      }[]
    | null;
  emailVerified?: string | null;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  orderNumber?: string | null;
  status: 'pending' | 'shipped' | 'delivered' | 'cancelled' | 'onhold';
  discountCodeApplied?: string | null;
  stripeId?: string | null;
  totals: {
    cost: number;
    shipping?: number | null;
    discount?: number | null;
    total: number;
  };
  billing?: {
    orderedBy?: (number | null) | User;
    firstName?: string | null;
    lastName?: string | null;
    email?: string | null;
    orgName?: string | null;
    orgId?: string | null;
    contactNumber?: number | null;
    address?: {
      addressLine1?: string | null;
      addressLine2?: string | null;
      city?: string | null;
      state?: string | null;
      postcode?: string | null;
    };
  };
  items?:
    | {
        itemId: string;
        quantity: number;
        price: number;
        product: number | Product;
        addOns?: (number | Product)[] | null;
        receiverId?: string | null;
        giftCard: {
          message: string;
          writingStyle: string;
        };
        id?: string | null;
      }[]
    | null;
  receivers?:
    | {
        receiverId: string;
        firstName: string;
        lastName: string;
        address: {
          addressLine1: string;
          addressLine2?: string | null;
          city: string;
          state: string;
          postcode: string;
        };
        delivery?: {
          tracking?: {
            id?: string | null;
            link?: string | null;
          };
          shippingMethod?: ('standardMail' | 'expressMail' | 'standardParcel' | 'expressParcel') | null;
          shippingPrice?: number | null;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "discountcodes".
 */
export interface Discountcode {
  id: number;
  slug: string;
  cartDescription: string;
  discountAmount: number;
  discountType: 'percentOff' | 'dollarsOff';
  starts: string;
  expires: string;
  homePageDetails: {
    onHomePage: boolean;
    AdvertisedDescription?: string | null;
    starts?: string | null;
    expires?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  slug?: string | null;
  layout?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: number | Media | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reusable".
 */
export interface Reusable {
  id: number;
  title: string;
  layout?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sessions".
 */
export interface Session {
  id: number;
  user: number | User;
  sessionToken: string;
  expires?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Setting {
  id: number;
  topBar?: {
    visible?: boolean | null;
    content?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  menu?: Menu;
  footer?: Footer;
  newsletterPopup?: {
    enabled?: boolean | null;
    title?: string | null;
    description?: string | null;
    footerDescription?: string | null;
    businessCheckboxText?: string | null;
    submitMessage?: string | null;
    submitButtonText?: string | null;
    collapsedText?: string | null;
    image?: number | Media | null;
    retailListId?: string | null;
    businessListId?: string | null;
    displayOn?:
      | (
          | {
              relationTo: 'pages';
              value: number | Page;
            }
          | {
              relationTo: 'products';
              value: number | Product;
            }
        )[]
      | null;
    delayInSeconds?: number | null;
    suppressUntil?: number | null;
  };
  defaultGiftCard?: DefaultGiftCard;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menu".
 */
export interface Menu {
  tabs?:
    | {
        label: string;
        enableDirectLink?: boolean | null;
        enableDropdown?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'products';
                value: number | Product;
              } | null);
          url?: string | null;
        };
        description?: string | null;
        descriptionLinks?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: number | Page;
                    } | null)
                  | ({
                      relationTo: 'products';
                      value: number | Product;
                    } | null);
                url?: string | null;
                label: string;
              };
              id?: string | null;
            }[]
          | null;
        items?:
          | {
              style?: ('default' | 'featured' | 'list') | null;
              defaultLink?: {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: number | Page;
                      } | null)
                    | ({
                        relationTo: 'products';
                        value: number | Product;
                      } | null);
                  url?: string | null;
                  label: string;
                };
                description?: string | null;
              };
              featuredLink?: {
                tag?: string | null;
                label?: {
                  root: {
                    type: string;
                    children: {
                      type: string;
                      version: number;
                      [k: string]: unknown;
                    }[];
                    direction: ('ltr' | 'rtl') | null;
                    format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                    indent: number;
                    version: number;
                  };
                  [k: string]: unknown;
                } | null;
                links?:
                  | {
                      link: {
                        type?: ('reference' | 'custom') | null;
                        newTab?: boolean | null;
                        reference?:
                          | ({
                              relationTo: 'pages';
                              value: number | Page;
                            } | null)
                          | ({
                              relationTo: 'products';
                              value: number | Product;
                            } | null);
                        url?: string | null;
                        label: string;
                      };
                      id?: string | null;
                    }[]
                  | null;
              };
              listLinks?: {
                tag?: string | null;
                links?:
                  | {
                      link: {
                        type?: ('reference' | 'custom') | null;
                        newTab?: boolean | null;
                        reference?:
                          | ({
                              relationTo: 'pages';
                              value: number | Page;
                            } | null)
                          | ({
                              relationTo: 'products';
                              value: number | Product;
                            } | null);
                        url?: string | null;
                        label: string;
                      };
                      id?: string | null;
                    }[]
                  | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  columns?:
    | {
        label?: string | null;
        items?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: number | Page;
                    } | null)
                  | ({
                      relationTo: 'products';
                      value: number | Product;
                    } | null);
                url?: string | null;
                label: string;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "defaultGiftCard".
 */
export interface DefaultGiftCard {
  defaultGiftCard?: (number | null) | Product;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}